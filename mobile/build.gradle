apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'com.neenbedankt.android-apt'

Properties local_properties = new Properties()
File localPropertiesFile = project.rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    local_properties.load(localPropertiesFile.newDataInputStream())
}

configurations {
    vngrsCompile
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
def versionBuild = 0

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.vngrs.android.pomodoro"
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}" + ((versionPatch != 0) ? ".${versionPatch}" : "")
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""

        resConfigs "en"
    }

    signingConfigs {
        debug {
            storeFile file("../distribution/debug.keystore")
        }

        release {
            storeFile file("../distribution/" + (local_properties.release_keystore_name ?: "debug.keystore"))
            keyAlias(local_properties.release_keystore_alias ?: "androiddebugkey")
            storePassword(local_properties.release_keystore_pwd ?: "android")
            keyPassword(local_properties.release_keystore_pwd2 ?: "android")
        }
    }

    productFlavors {
        standalone {
            applicationId "com.vngrs.android.pomodoro.standalone"
        }
        vngrs {
            applicationId "com.vngrs.android.pomodoro.internal"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.debug
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        alpha.initWith(release)
        alpha {
            buildConfigField "Boolean", "ALPHA", "true"
        }
    }

    lintOptions {
        abortOnError true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    debugCompile project(path: ':shared', configuration: 'debug')
    releaseCompile project(path: ':shared', configuration: 'release')

    wearApp project(':wear')

    compile 'com.android.support:appcompat-v7:22.0.0'

    compile 'com.google.android.gms:play-services:7.0.0'

    compile 'com.google.dagger:dagger:2.0-SNAPSHOT'
    apt 'com.google.dagger:dagger-compiler:2.0-SNAPSHOT'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile 'com.jakewharton:butterknife:6.1.0'

    vngrsCompile 'com.squareup.okhttp:okhttp:2.2.0'
    vngrsCompile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    vngrsCompile 'com.squareup.okio:okio:1.2.0'
    vngrsCompile 'com.squareup.retrofit:retrofit:1.9.0'
}
